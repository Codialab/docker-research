FROM nvidia/cuda:9.0-cudnn7-runtime-ubuntu16.04

# Python 3.6.X Environments
ENV GPG_KEY 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D
ENV PYTHON_VERSION 3.6.7

# Install Essential Package
RUN apt-get update && apt-get -y install --no-install-recommends \
	build-essential \
	g++ \
	curl \
	git \
	wget \
	sshfs \
	unzip \
	vim \
	pkg-config \
	rsync \
	software-properties-common \
	tk-dev \
	libreadline-gplv2-dev \
	libncursesw5-dev \
	libssl-dev \
	libsqlite3-dev \
	libgdbm-dev \
	libc6-dev \
	libbz2-dev

# Install Supervisors
RUN apt-get install -y supervisor && \
        sed -i 's/^\(\[supervisord\]\)$/\1\nnodaemon=true/' /etc/supervisor/supervisord.conf

# Define mountable directories.
VOLUME ["/etc/supervisor/conf.d"]

# ------------------------------------------------------------------------------
# Security changes
# - Determine runlevel and services at startup [BOOT-5180]
RUN update-rc.d supervisor defaults

# Define working directory.
#WORKDIR /etc/supervisor/conf.d
# ------------------------------------------------------------------------------


# Compile & Install Python 3.6.7 from repository
# References: https://github.com/docker-library/python/blob/bf1acb4f1caad419ff290d700044240b4e8cb0df/3.6/jessie/Dockerfile
#################################################
RUN set -ex \
	\
	&& wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz" \
	&& wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc" \
	&& export GNUPGHOME="$(mktemp -d)" \
	&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" \
	&& gpg --batch --verify python.tar.xz.asc python.tar.xz \
	&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \
	&& rm -rf "$GNUPGHOME" python.tar.xz.asc \
	&& mkdir -p /usr/src/python \
	&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \
	&& rm python.tar.xz \
	\
	&& cd /usr/src/python \
	&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
	&& ./configure \
		--build="$gnuArch" \
		--enable-loadable-sqlite-extensions \
		--enable-shared \
		--with-system-expat \
		--with-system-ffi \
		--without-ensurepip \
	&& make -j "$(nproc)" \
	&& make install \
	&& ldconfig \
	\
	&& find /usr/local -depth \
		\( \
			\( -type d -a \( -name test -o -name tests \) \) \
			-o \
			\( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \) \
		\) -exec rm -rf '{}' + \
	&& rm -rf /usr/src/python \
	\
	&& python3 --version

# make some useful symlinks that are expected to exist
RUN cd /usr/local/bin \
	&& ln -s idle3 idle \
	&& ln -s pydoc3 pydoc \
	&& ln -s python3 python \
	&& ln -s python3-config python-config

# Install Python-Installation-Package (PIP)
RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    python3.6 get-pip.py && \
    rm get-pip.py

# Set Environments
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/cuda/extras/CUPTI/lib64
ENV PATH ${PATH}:/usr/local/cuda-9.0/bin
ENV CUDA_HOME ${CUDA_HOME}:/usr/local/cuda:/usr/local/cuda-9.0
ENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:/usr/local/cuda-9.0/lib64

# Create Workspace
RUN mkdir -p /data
VOLUME [ "/data" ]
WORKDIR /data

# Add supervisord conf
ADD cloud9.conf /etc/supervisor/conf.d/
ADD jupyter.conf /etc/supervisor/conf.d/

# Install pip package via requirements.txt
ADD requirements.txt /data
RUN pip3 --no-cache-dir install -r requirements.txt

# Update Config for Jupyter within PasswordMode
COPY jupyter_notebook_config.py /root/.jupyter/

# ---------------- space for cloud9 session ---------------- #
RUN curl -sL https://deb.nodesource.com/setup_8.x | bash - && \
	apt-get install -y nodejs

RUN git clone https://github.com/c9/core.git /cloud9 && \
	sh /cloud9/scripts/install-sdk.sh && \
	sed -i -e 's_127.0.0.1_0.0.0.0_g' /cloud9/configs/standalone.js
# ---------------- end of cloud9 session ---------------- #

EXPOSE 8888
EXPOSE 80
EXPOSE 6006

CMD ["supervisord", "-c", "/etc/supervisor/supervisord.conf"]

#CMD ["bash", "-c", "source /etc/bash.bashrc && jupyter notebook --notebook-dir=/data --ip 0.0.0.0 --no-browser --allow-root", "bash", "-c", "source /etc/bash.bashrc && nodejs /cloud9/server.js --listen 0.0.0.0 --port 80 -w /data"]
